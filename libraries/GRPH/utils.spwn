extract obj_props

grid = (n: @number) {
  return 15 + (n - 1) * 30
}

ceil = (n: @number, round_to: @number = 1) {
  return $.ceil(n / round_to) * round_to
}

floor = (n: @number, round_to: @number = 1) {
  return $.floor(n / round_to) * round_to
}

create_color_channel = (color: @chroma|@NULL) {
  if color == null || color == hex('#fff') { return ?c }

  cchannel = ?c
  c_rgb = color.rgb8()

  $.add(obj {
    OBJ_ID: 899,
    X: 0,
    Y: 2000,
    TARGET_COLOR: cchannel,
    TRIGGER_RED: c_rgb[0],
    TRIGGER_GREEN: c_rgb[1],
    TRIGGER_BLUE: c_rgb[2]
  })

  return cchannel
}

// TODO: fix up parameter naming
// TODO: use class extension instead of util functions
create_y_axis_label = (
  y_axis_label: @string,
  v_range_end: @number,
  between_y_step: @number,
  color_channel: @color,
  groups: @array,
  start_y: @number,
  start_x: @number
) {
  if y_axis_label.length == 0 { return }

  y_axis_label.to_obj().with(
    X, start_x - 12
  ).with(
    Y, start_y + grid((v_range_end - 1) * between_y_step / 2 + 1.5)
  ).with(
    ROTATION, 90
  ).with(
    COLOR, color_channel
  ).with(
    GROUPS, groups
  ).add()
}

create_x_axis_label = (
  x_axis_label: @string,
  v_range_end: @number,
  color_channel: @color,
  groups: @array,
  middle: @number,
  start_y: @number
) {
  if x_axis_label.length == 0 { return }

  x_axis_label.to_obj().with(
    X, middle
  ).with(
    Y, start_y - 20
  ).with(
    COLOR, color_channel
  ).with(
    GROUPS, groups
  ).add()
}

create_title_text = (
  title: @string,
  v_range_end: @number,
  between_y_step: @number,
  color_channel: @color,
  groups: @array,
  middle: @number,
  start_y: @number
) {
  if title.length == 0 { return }

  base_y = start_y + grid((v_range_end - 1) * between_y_step + 3.5)
  texts = title.split('\n').reverse() // split returns them in reverse order

  // to be able to center the text when newline is used
  for i in 0..texts.length {
    texts[i].to_obj().with(
      X, middle
    ).with(
      Y, base_y + i * 30
    ).with(
      COLOR, color_channel
    ).with(
      GROUPS, groups
    ).add()
  }
}

return {
  grid,
  floor,
  ceil,
  create_color_channel,
  create_y_axis_label,
  create_x_axis_label,
  create_title_text
}